name: Build And Deploy
on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go
        uses: actions/setup-go@master
        with:
            go-version: 1.14

      - name: Set up Node
        uses: actions/setup-node@master

      - name: Check out code
        uses: actions/checkout@master

      - name: Build
        run: |
          make build_server
          make build_client
          tar -zcvf release.tgz output

      - name: Create release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.tgz
          asset_name: release.tgz
          asset_content_type: application/x-tgz

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          command_timeout: 30m
          script: |
            mkdir -p ~/release
            mkdir -p ~/chaosi/server/daily-problem
            mkdir -p /usr/local/nginx/html/daily-problem
            cd ~/release
            wget -q -t 3 -T 30 https://github.com/chaosi-zju/daily-problem/releases/latest/download/release.tgz -O daily-problem.tgz
            tar -zxvf daily-problem.tgz
            systemctl disable daily_problem.service
            systemctl stop daily_problem.service
            cp -rf output/server/* ~/chaosi/server/daily-problem/
            cp -rf output/dist/* /usr/local/nginx/html/daily-problem/
            cp -rf output/daily_problem.service /etc/systemd/system/
            export MYSQL_HOST=${{ secrets.MYSQL_HOST }} MYSQL_USER=${{ secrets.MYSQL_USER }} MYSQL_PASSWD=${{ secrets.MYSQL_PASSWD }}
            cd ~/chaosi/server/daily-problem && envsubst < config_prod_temp.yaml > config_prod.yaml && cd -
            systemctl enable daily_problem.service
            systemctl start daily_problem.service
            systemctl status daily_problem.service
            [ -d outout ] && rm -r output



